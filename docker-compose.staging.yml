version: '3.8'

services:
  # ================================
  # üîß BACKEND SERVICE
  # ================================
  backend:
    image: ghcr.io/yourusername/adcopysurge/backend:${DOCKER_IMAGE_TAG:-latest}
    container_name: adcopysurge-backend-staging
    restart: unless-stopped
    
    environment:
      # Core Configuration
      - ENVIRONMENT=staging
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=false
      - CORS_ORIGINS=https://staging.adcopysurge.com,https://adcopysurge.com
      
      # Database
      - DATABASE_URL=${DATABASE_URL}
      - DB_POOL_SIZE=10
      - DB_MAX_OVERFLOW=20
      
      # AI Services
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY:-}
      
      # Authentication
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
      
      # Email Configuration
      - SMTP_USERNAME=${SMTP_USERNAME:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - FROM_EMAIL=${FROM_EMAIL:-noreply@adcopysurge.com}
      
      # Redis for caching and background tasks
      - REDIS_URL=redis://redis:6379/0
      
      # Background Tasks
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      
      # File Storage
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=10485760  # 10MB
      
      # Rate Limiting
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_PER_MINUTE=100
      
      # Monitoring
      - SENTRY_DSN=${SENTRY_DSN:-}
      - LOG_LEVEL=INFO
      
    ports:
      - "8000:8000"
      
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
      
    depends_on:
      - redis
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ================================
  # üé® FRONTEND SERVICE  
  # ================================
  frontend:
    image: ghcr.io/yourusername/adcopysurge/frontend:${DOCKER_IMAGE_TAG:-latest}
    container_name: adcopysurge-frontend-staging
    restart: unless-stopped
    
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=https://staging-api.adcopysurge.com
      - REACT_APP_ENVIRONMENT=staging
      - REACT_APP_SUPABASE_URL=${SUPABASE_URL}
      - REACT_APP_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - REACT_APP_SENTRY_DSN=${REACT_APP_SENTRY_DSN:-}
      - GENERATE_SOURCEMAP=false
      
    ports:
      - "3000:3000"
      
    depends_on:
      - backend
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ================================
  # üì¶ REDIS SERVICE
  # ================================
  redis:
    image: redis:7-alpine
    container_name: adcopysurge-redis-staging
    restart: unless-stopped
    
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    
    volumes:
      - redis_data:/data
      
    ports:
      - "6379:6379"
      
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # ================================
  # üîÑ CELERY WORKER
  # ================================
  celery-worker:
    image: ghcr.io/yourusername/adcopysurge/backend:${DOCKER_IMAGE_TAG:-latest}
    container_name: adcopysurge-celery-worker-staging
    restart: unless-stopped
    
    command: celery -A app.celery_app worker --loglevel=INFO --concurrency=2
    
    environment:
      # Same environment as backend
      - ENVIRONMENT=staging
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY:-}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - LOG_LEVEL=INFO
      
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
      
    depends_on:
      - redis
      - backend
      
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ================================
  # üìä MONITORING - NGINX
  # ================================
  nginx:
    image: nginx:alpine
    container_name: adcopysurge-nginx-staging
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
      
    volumes:
      - ./nginx/staging.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
      
    depends_on:
      - frontend
      - backend
      
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# ================================
# üì¶ VOLUMES
# ================================
volumes:
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local  
  nginx_logs:
    driver: local

# ================================
# üåê NETWORKS
# ================================
networks:
  default:
    name: adcopysurge-staging
    driver: bridge