name: Deploy Frontend to Netlify

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'frontend/**'

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint --if-present

    - name: Run tests
      run: npm test -- --coverage --watchAll=false
      env:
        CI: true

    - name: Build application
      run: npm run build
      env:
        CI: false
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
        REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
        REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}

  deploy-staging:
    name: Deploy to Staging (Netlify)
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build for staging
      run: npm run build
      env:
        CI: false
        REACT_APP_API_URL: ${{ secrets.STAGING_API_URL }}
        REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
        REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}
        REACT_APP_ENVIRONMENT: staging

    - name: Deploy to Netlify (Staging)
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir=frontend/build --site=${{ secrets.NETLIFY_STAGING_SITE_ID }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  deploy-production:
    name: Deploy to Production (Netlify)
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      run: npm run build
      env:
        CI: false
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
        REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
        REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}
        REACT_APP_ENVIRONMENT: production
        GENERATE_SOURCEMAP: false

    - name: Deploy to Netlify (Production)
      uses: netlify/actions/cli@master
      with:
        args: deploy --dir=frontend/build --prod --site=${{ secrets.NETLIFY_SITE_ID }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: frontend-v${{ github.run_number }}
        release_name: Frontend Release v${{ github.run_number }}
        body: |
          Frontend deployment to production
          
          Changes in this release:
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
